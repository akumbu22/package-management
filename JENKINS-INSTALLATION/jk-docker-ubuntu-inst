##Autor Akumbu
sudo apt update -y
sudo apt install docker.io -y
sudo systemctl start docker
sudo systemctl enable docker.service
# Jenkins Installation               ##And Setup In AWS EC2 ubuntu Instance.
# Installation of Java
sudo apt install openjdk-11-jdk -y     ##java development kit
java -version
# Install Jenkins
sudo wget -q -O  https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt install jenkins
sudo systemctl start jenkins
Jenkins -version
# Add jenkins to docker group
sudo usermod -aG docker jenkins
sudo systemctl restart docker.service
sudo echo "jenkins ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/jenkins
sudo vi /etc/passwd
sudo su - jenkins     #run docker ps
#install AWSCLI and KOPS
sudo apt update -y
sudo apt install unzip wget -y 
sudo curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip
sudo apt install unzip python -y
sudo unzip awscli-bundle.zip
sudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
#kops software
sudo apt install wget -y
sudo wget https://github.com/kubernetes/kops/releases/download/v1.18.2/kops-linux
sudo chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops
#KUBECTL
sudo curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s 
https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl sudo chmod +x ./kubectl sudo mv ./kubectl /usr/local/bin/kubectl
#run aws s3 ls =no iam role yet so create and 
#Attach an IAM role to the server
AmazonEC2FullAccess 
AmazonS3FullAccess
IAMFullAccess 
AmazonVPCFullAccess
#create a bucket
e.g aws s3 mb s3://akumbu18.k8s.local OR aws s3api create-bucket --bucket (bucketname) --region (regionName) aws s3 ls (to see all buckets)
##Expose environment variable:
# Add env variables in bashrc
vi .bashrc------>paste the export
# Give Unique Name And S3 Bucket which you created.
export NAME=akumbu25.k8s.local-------------------------->cluster name
export KOPS_STATE_STORE=s3://akumbu25.k8s.local--------->s3 bucket where info will be kept e.g logsfiles
source .bashrc <-----then refresh
#run echo $NAME ------> to see the clustername that we defined
#Create and copy key into the cluster created so as to be able to access the cluster 
ssh-keygen----->enter enter enter
#Create kubernetes cluster definitions on S3 bucket
kops create cluster --zones us-east-1b --networking weave --master-size t2.medium --master-count 1 --node-size t2.medium --node-count=2 ${NAME}
#copy the key into the cluster to enable communication
kops create secret --name ${NAME} sshpublickey admin -i ~/.ssh/id_rsa.pub
#Create kubernetes cluser
 kops update cluster ${NAME} --yes
#While creating is ongoing go to ur jk and access it on the web and intall s.plugins
#Validate your cluster(KOPS will take some time to create cluster ,Execute below commond after 3 or 4 mins)
   kops validate cluster
#connect to the master node
ssh -i ~/.ssh/id_rsa ubuntu@ipAddress
11) To list nodes
  kubectl get nodes 
12) To Delete Cluster
sudo kops delete cluster --name=${NAME} --state=${KOPS_STATE_STORE} --yes

====================================================================================================

13 # IF you want to SSH to Kubernetes Master or Nodes Created by KOPS. You can SSH From KOPS_Server

sh -i ~/.ssh/id_rsa ubuntu@ipAddress ssh -i ~/.ssh/id_rsa ubuntu@3.90.203.23
